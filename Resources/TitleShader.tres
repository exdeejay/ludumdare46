[gd_resource type="VisualShader" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 31

[sub_resource type="VisualShaderNodeColorConstant" id=4]
constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 0.816406, 0.447668, 0.226425, 1 )

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=7]

[sub_resource type="VisualShaderNodeVectorInterp" id=8]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTexture" id=12]
output_port_for_preview = 1
source = 2

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 20.0 ]
operator = 5

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.000000, 0.000000, 0.000000);
	float n_out2p1 = 1.000000;

// Color:3
	vec3 n_out3p0 = vec3(0.816406, 0.447668, 0.226425);
	float n_out3p1 = 1.000000;

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// ScalarFunc:10
	float n_out10p0 = 1.0 - n_out5p1;

// ScalarOp:9
	float n_in9p1 = 20.00000;
	float n_out9p0 = pow(n_out10p0, n_in9p1);

// VectorMix:6
	vec3 n_out6p0 = mix(n_out2p0, n_out3p0, vec3(n_out9p0));

// Texture:8
	vec3 n_out8p0;
	float n_out8p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out8p0 = _tex_read.rgb;
		n_out8p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out6p0;
	COLOR.a = n_out8p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 542.5, 111.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1360, 280 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( 600, 380 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( 600, 260 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( 300, 40 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( 480, 40 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( 940, 260 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( 940, 560 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( 880, 100 )
nodes/fragment/10/node = SubResource( 11 )
nodes/fragment/10/position = Vector2( 680, 80 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 9, 0, 6, 2, 2, 0, 6, 0, 3, 0, 6, 1, 5, 1, 10, 0, 10, 0, 9, 0, 8, 1, 0, 1, 6, 0, 0, 0 )
