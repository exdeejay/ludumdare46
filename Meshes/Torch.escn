[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.04599641263484955, 0.019441861659288406,
		0.010166089981794357, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="ArrayMesh"]

resource_name = "Cube"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0153945, 0.222091, 0.00370622, -0.01911, 0.213016, -0.0168136, -0.0111304, 0.222044, 0.0158617, -0.01911, 0.213016, -0.0168136, 0.0411625, 0.175191, -0.0298356, -0.0387203, 0.162155, -0.0244912, 0.0129403, 0.223703, -0.0194299, 0.0350421, 0.169814, 0.0391946, 0.0411625, 0.175191, -0.0298356, -0.0105581, -0.196133, 0.0246591, 0.0224739, -0.197083, -0.0173349, 0.016099, -0.193229, 0.0197014, -0.0111304, 0.222044, 0.0158617, -0.0387203, 0.162155, -0.0244912, -0.0394497, 0.15167, 0.0312425, 0.0153945, 0.222091, 0.00370622, -0.0394497, 0.15167, 0.0312425, 0.0350421, 0.169814, 0.0391946, 0.0350421, 0.169814, 0.0391946, -0.0303619, 0.0378061, 0.0287747, 0.027242, 0.0467068, 0.0346377, -0.0394497, 0.15167, 0.0312425, -0.0309931, 0.0419246, -0.0222028, -0.0303619, 0.0378061, 0.0287747, 0.0411625, 0.175191, -0.0298356, 0.027242, 0.0467068, 0.0346377, 0.034933, 0.0510996, -0.0256687, -0.0387203, 0.162155, -0.0244912, 0.034933, 0.0510996, -0.0256687, -0.0309931, 0.0419246, -0.0222028, -0.0224461, -0.0821067, -0.0183392, 0.0224739, -0.197083, -0.0173349, -0.0194556, -0.19865, -0.00735855, -0.0309931, 0.0419246, -0.0222028, 0.0287034, -0.0729919, -0.0215018, -0.0224461, -0.0821067, -0.0183392, 0.0287034, -0.0729919, -0.0215018, 0.016099, -0.193229, 0.0197014, 0.0224739, -0.197083, -0.0173349, 0.034933, 0.0510996, -0.0256687, 0.0246551, -0.0739946, 0.0332898, 0.0287034, -0.0729919, -0.0215018, -0.0239883, -0.0785319, 0.0309557, -0.0194556, -0.19865, -0.00735855, -0.0105581, -0.196133, 0.0246591, -0.0303619, 0.0378061, 0.0287747, -0.0224461, -0.0821067, -0.0183392, -0.0239883, -0.0785319, 0.0309557, 0.0246551, -0.0739946, 0.0332898, -0.0105581, -0.196133, 0.0246591, 0.016099, -0.193229, 0.0197014, 0.027242, 0.0467068, 0.0346377, -0.0239883, -0.0785319, 0.0309557, 0.0246551, -0.0739946, 0.0332898, 0.0153945, 0.222091, 0.00370622, 0.0129403, 0.223703, -0.0194299, -0.01911, 0.213016, -0.0168136, -0.01911, 0.213016, -0.0168136, 0.0129403, 0.223703, -0.0194299, 0.0411625, 0.175191, -0.0298356, 0.0129403, 0.223703, -0.0194299, 0.0153945, 0.222091, 0.00370622, 0.0350421, 0.169814, 0.0391946, -0.0105581, -0.196133, 0.0246591, -0.0194556, -0.19865, -0.00735855, 0.0224739, -0.197083, -0.0173349, -0.0111304, 0.222044, 0.0158617, -0.01911, 0.213016, -0.0168136, -0.0387203, 0.162155, -0.0244912, 0.0153945, 0.222091, 0.00370622, -0.0111304, 0.222044, 0.0158617, -0.0394497, 0.15167, 0.0312425, 0.0350421, 0.169814, 0.0391946, -0.0394497, 0.15167, 0.0312425, -0.0303619, 0.0378061, 0.0287747, -0.0394497, 0.15167, 0.0312425, -0.0387203, 0.162155, -0.0244912, -0.0309931, 0.0419246, -0.0222028, 0.0411625, 0.175191, -0.0298356, 0.0350421, 0.169814, 0.0391946, 0.027242, 0.0467068, 0.0346377, -0.0387203, 0.162155, -0.0244912, 0.0411625, 0.175191, -0.0298356, 0.034933, 0.0510996, -0.0256687, -0.0224461, -0.0821067, -0.0183392, 0.0287034, -0.0729919, -0.0215018, 0.0224739, -0.197083, -0.0173349, -0.0309931, 0.0419246, -0.0222028, 0.034933, 0.0510996, -0.0256687, 0.0287034, -0.0729919, -0.0215018, 0.0287034, -0.0729919, -0.0215018, 0.0246551, -0.0739946, 0.0332898, 0.016099, -0.193229, 0.0197014, 0.034933, 0.0510996, -0.0256687, 0.027242, 0.0467068, 0.0346377, 0.0246551, -0.0739946, 0.0332898, -0.0239883, -0.0785319, 0.0309557, -0.0224461, -0.0821067, -0.0183392, -0.0194556, -0.19865, -0.00735855, -0.0303619, 0.0378061, 0.0287747, -0.0309931, 0.0419246, -0.0222028, -0.0224461, -0.0821067, -0.0183392, 0.0246551, -0.0739946, 0.0332898, -0.0239883, -0.0785319, 0.0309557, -0.0105581, -0.196133, 0.0246591, 0.027242, 0.0467068, 0.0346377, -0.0303619, 0.0378061, 0.0287747, -0.0239883, -0.0785319, 0.0309557),
		Vector3Array(-0.111364, 0.96454, -0.23929, -0.111364, 0.96454, -0.23929, -0.111364, 0.96454, -0.23929, -0.095551, 0.184498, -0.978177, -0.095551, 0.184498, -0.978177, -0.095551, 0.184498, -0.978177, 0.869164, 0.481078, 0.114534, 0.869164, 0.481078, 0.114534, 0.869164, 0.481078, 0.114534, 0.130368, -0.98358, 0.124796, 0.130368, -0.98358, 0.124796, 0.130368, -0.98358, 0.124796, -0.921399, 0.383932, 0.0601683, -0.921399, 0.383932, 0.0601683, -0.921399, 0.383932, 0.0601683, -0.21034, 0.493753, 0.84378, -0.21034, 0.493753, 0.84378, -0.21034, 0.493753, 0.84378, -0.0965121, -0.0307106, 0.994858, -0.0965121, -0.0307106, 0.994858, -0.0965121, -0.0307106, 0.994858, -0.996803, -0.0796855, 0.00590461, -0.996803, -0.0796855, 0.00590461, -0.996803, -0.0796855, 0.00590461, 0.991344, -0.0456327, 0.123104, 0.991344, -0.0456327, 0.123104, 0.991344, -0.0456327, 0.123104, -0.0494072, -0.0221804, -0.998532, -0.0494072, -0.0221804, -0.998532, -0.0494072, -0.0221804, -0.998532, -0.226939, -0.097127, -0.969054, -0.226939, -0.097127, -0.969054, -0.226939, -0.097127, -0.969054, -0.0554769, -0.0349066, -0.99785, -0.0554769, -0.0349066, -0.99785, -0.0554769, -0.0349066, -0.99785, 0.983805, -0.0435496, 0.17387, 0.983805, -0.0435496, 0.17387, 0.983805, -0.0435496, 0.17387, 0.996216, -0.0475686, 0.0727353, 0.996216, -0.0475686, 0.0727353, 0.996216, -0.0475686, 0.0727353, -0.953552, -0.123604, 0.274701, -0.953552, -0.123604, 0.274701, -0.953552, -0.123604, 0.274701, -0.998105, -0.055192, -0.027223, -0.998105, -0.055192, -0.027223, -0.998105, -0.055192, -0.027223, 0.194543, -0.124837, 0.972918, 0.194543, -0.124837, 0.972918, 0.194543, -0.124837, 0.972918, -0.0469809, -0.0101477, 0.998844, -0.0469809, -0.0101477, 0.998844, -0.0469809, -0.0101477, 0.998844, -0.307514, 0.946426, 0.0985513, -0.307514, 0.946426, 0.0985513, -0.307514, 0.946426, 0.0985513, -0.12602, 0.137422, -0.982463, -0.12602, 0.137422, -0.982463, -0.12602, 0.137422, -0.982463, 0.9497, 0.302865, -0.0796426, 0.9497, 0.302865, -0.0796426, 0.9497, 0.302865, -0.0796426, 0.0523996, -0.996589, 0.0637592, 0.0523996, -0.996589, 0.0637592, 0.0523996, -0.996589, 0.0637592, -0.931272, 0.338866, 0.133804, -0.931272, 0.338866, 0.133804, -0.931272, 0.338866, 0.133804, 0.416357, 0.0310512, 0.908671, 0.416357, 0.0310512, 0.908671, 0.416357, 0.0310512, 0.908671, -0.0990051, -0.029459, 0.994651, -0.0990051, -0.029459, 0.994651, -0.0990051, -0.029459, 0.994651, -0.997593, -0.0645948, -0.025208, -0.997593, -0.0645948, -0.025208, -0.997593, -0.0645948, -0.025208, 0.994355, -0.0660754, 0.0830154, 0.994355, -0.0660754, 0.0830154, 0.994355, -0.0660754, 0.0830154, -0.0617833, -0.030398, -0.997627, -0.0617833, -0.030398, -0.997627, -0.0617833, -0.030398, -0.997627, -0.0562347, -0.0306872, -0.997946, -0.0562347, -0.0306872, -0.997946, -0.0562347, -0.0306872, -0.997946, -0.0481557, -0.0311065, -0.998355, -0.0481557, -0.0311065, -0.998355, -0.0481557, -0.0311065, -0.998355, 0.994227, -0.0795502, 0.0720029, 0.994227, -0.0795502, 0.0720029, 0.994227, -0.0795502, 0.0720029, 0.991917, -0.0226526, 0.124851, 0.991917, -0.0226526, 0.124851, 0.991917, -0.0226526, 0.124851, -0.99917, -0.0283894, -0.0292001, -0.99917, -0.0283894, -0.0292001, -0.99917, -0.0283894, -0.0292001, -0.997625, -0.0685343, 0.00681575, -0.997625, -0.0685343, 0.00681575, -0.997625, -0.0685343, 0.00681575, -0.042425, -0.0582477, 0.9974, -0.042425, -0.0582477, 0.9974, -0.042425, -0.0582477, 0.9974, -0.103235, 0.0129895, 0.994572, -0.103235, 0.0129895, 0.994572, -0.103235, 0.0129895, 0.994572),
		FloatArray(0.909087, 0.00160722, -0.416603, 1.0, 0.909087, 0.00160722, -0.416603, 1.0, 0.909087, 0.00160722, -0.416603, 1.0, 0.356233, 0.92393, 0.139469, 1.0, 0.356233, 0.92393, 0.139469, 1.0, 0.356233, 0.92393, 0.139469, 1.0, -0.494431, 0.849886, 0.182299, 1.0, -0.494431, 0.849886, 0.182299, 1.0, -0.494431, 0.849886, 0.182299, 1.0, -0.97755, -0.106501, 0.181804, 1.0, -0.97755, -0.106501, 0.181804, 1.0, -0.97755, -0.106501, 0.181804, 1.0, 0.365874, 0.909202, -0.198714, 1.0, 0.365874, 0.909202, -0.198714, 1.0, 0.365874, 0.909202, -0.198714, 1.0, -0.296931, 0.790051, -0.536332, 1.0, -0.296931, 0.790051, -0.536332, 1.0, -0.296931, 0.790051, -0.536332, 1.0, 0.0631903, 0.997318, 0.0369167, 1.0, 0.0631902, 0.997318, 0.0369167, 1.0, 0.0631902, 0.997318, 0.0369167, 1.0, -0.0795412, 0.996598, 0.0215994, 1.0, -0.0795412, 0.996598, 0.0215994, 1.0, -0.0795412, 0.996598, 0.0215994, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, -0.0641258, 0.997761, -0.0189903, 1.0, -0.0641258, 0.997761, -0.0189903, 1.0, -0.0641258, 0.997761, -0.0189903, 1.0, -0.025538, 0.995266, -0.0937736, 1.0, -0.025538, 0.995266, -0.0937736, 1.0, -0.025538, 0.995266, -0.0937735, 1.0, -0.068714, 0.997153, -0.031062, 1.0, -0.068714, 0.997153, -0.031062, 1.0, -0.068714, 0.997153, -0.031062, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, -0.113303, 0.992139, 0.0531212, 1.0, -0.113303, 0.992139, 0.0531212, 1.0, -0.113303, 0.992139, 0.0531212, 1.0, -0.0546939, 0.998328, -0.0187158, 1.0, -0.0546939, 0.998328, -0.0187158, 1.0, -0.0546939, 0.998328, -0.0187158, 1.0, 0.0711168, 0.991053, 0.112944, 1.0, 0.0711168, 0.991053, 0.112944, 1.0, 0.0711168, 0.991053, 0.112944, 1.0, 0.0214253, 0.999708, 0.0111642, 1.0, 0.0214253, 0.999708, 0.0111642, 1.0, 0.0214253, 0.999708, 0.0111642, 1.0, 0.945826, 0.315359, -0.0772102, 1.0, 0.945826, 0.315359, -0.0772102, 1.0, 0.945826, 0.315359, -0.0772102, 1.0, -0.49443, 0.849886, 0.182299, 1.0, -0.49443, 0.849886, 0.182299, 1.0, -0.49443, 0.849886, 0.182299, 1.0, -0.29693, 0.790051, -0.536332, 1.0, -0.29693, 0.790051, -0.536332, 1.0, -0.29693, 0.790051, -0.536332, 1.0, -0.9722, -0.0363182, 0.231316, 1.0, -0.9722, -0.0363182, 0.231316, 1.0, -0.9722, -0.0363182, 0.231316, 1.0, 0.356233, 0.92393, 0.139469, 1.0, 0.356233, 0.92393, 0.139469, 1.0, 0.356233, 0.92393, 0.139469, 1.0, 0.365874, 0.909202, -0.198714, 1.0, 0.365874, 0.909202, -0.198714, 1.0, 0.365874, 0.909202, -0.198714, 1.0, -0.0795412, 0.996597, 0.0215994, 1.0, -0.0795412, 0.996597, 0.0215994, 1.0, -0.0795412, 0.996598, 0.0215994, 1.0, -0.0641258, 0.997761, -0.0189904, 1.0, -0.0641258, 0.997761, -0.0189904, 1.0, -0.0641258, 0.997761, -0.0189904, 1.0, 0.0631902, 0.997318, 0.0369167, 1.0, 0.0631902, 0.997319, 0.0369167, 1.0, 0.0631902, 0.997319, 0.0369167, 1.0, 0.0501097, 0.998181, -0.0335182, 1.0, 0.0501097, 0.998181, -0.0335182, 1.0, 0.0501097, 0.998181, -0.0335182, 1.0, 0.0501097, 0.998181, -0.0335182, 1.0, 0.0501097, 0.998181, -0.0335182, 1.0, 0.0501097, 0.998181, -0.0335182, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, 0.0501097, 0.998181, -0.0335181, 1.0, 0.0711168, 0.991053, 0.112944, 1.0, 0.0711168, 0.991053, 0.112944, 1.0, 0.0711168, 0.991053, 0.112944, 1.0, 0.0214253, 0.999708, 0.0111641, 1.0, 0.0214253, 0.999708, 0.0111641, 1.0, 0.0214253, 0.999708, 0.0111641, 1.0, -0.025538, 0.995266, -0.0937736, 1.0, -0.025538, 0.995266, -0.0937736, 1.0, -0.025538, 0.995266, -0.0937736, 1.0, -0.068714, 0.997153, -0.031062, 1.0, -0.068714, 0.997153, -0.031062, 1.0, -0.068714, 0.997153, -0.031062, 1.0, -0.113303, 0.99214, 0.0531211, 1.0, -0.113303, 0.992139, 0.0531211, 1.0, -0.113303, 0.992139, 0.0531211, 1.0, -0.054694, 0.998328, -0.0187157, 1.0, -0.054694, 0.998328, -0.0187157, 1.0, -0.054694, 0.998328, -0.0187157, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.875, 0.5, 0.625, 0.25, 0.625, 0.5, 0.625, 0.25, 0.55756, 0.0, 0.55756, 0.25, 0.625, 1.0, 0.55756, 0.75, 0.55756, 1.0, 0.375, 0.5, 0.125, 0.25, 0.125, 0.5, 0.625, 0.5, 0.55756, 0.25, 0.55756, 0.5, 0.625, 0.75, 0.55756, 0.5, 0.55756, 0.75, 0.55756, 0.75, 0.496706, 0.5, 0.496706, 0.75, 0.55756, 0.5, 0.496706, 0.25, 0.496706, 0.5, 0.55756, 1.0, 0.496706, 0.75, 0.496706, 1.0, 0.55756, 0.25, 0.496706, 0.0, 0.496706, 0.25, 0.435853, 0.25, 0.375, 0.0, 0.375, 0.25, 0.496706, 0.25, 0.435853, 0.0, 0.435853, 0.25, 0.435853, 1.0, 0.375, 0.75, 0.375, 1.0, 0.496706, 1.0, 0.435853, 0.75, 0.435853, 1.0, 0.435853, 0.5, 0.375, 0.25, 0.375, 0.5, 0.496706, 0.5, 0.435853, 0.25, 0.435853, 0.5, 0.435853, 0.75, 0.375, 0.5, 0.375, 0.75, 0.496706, 0.75, 0.435853, 0.5, 0.435853, 0.75, 0.875, 0.5, 0.875, 0.25, 0.625, 0.25, 0.625, 0.25, 0.625, 0.0, 0.55756, 0.0, 0.625, 1.0, 0.625, 0.75, 0.55756, 0.75, 0.375, 0.5, 0.375, 0.25, 0.125, 0.25, 0.625, 0.5, 0.625, 0.25, 0.55756, 0.25, 0.625, 0.75, 0.625, 0.5, 0.55756, 0.5, 0.55756, 0.75, 0.55756, 0.5, 0.496706, 0.5, 0.55756, 0.5, 0.55756, 0.25, 0.496706, 0.25, 0.55756, 1.0, 0.55756, 0.75, 0.496706, 0.75, 0.55756, 0.25, 0.55756, 0.0, 0.496706, 0.0, 0.435853, 0.25, 0.435853, 0.0, 0.375, 0.0, 0.496706, 0.25, 0.496706, 0.0, 0.435853, 0.0, 0.435853, 1.0, 0.435853, 0.75, 0.375, 0.75, 0.496706, 1.0, 0.496706, 0.75, 0.435853, 0.75, 0.435853, 0.5, 0.435853, 0.25, 0.375, 0.25, 0.496706, 0.5, 0.496706, 0.25, 0.435853, 0.25, 0.435853, 0.75, 0.435853, 0.5, 0.375, 0.5, 0.496706, 0.75, 0.496706, 0.5, 0.435853, 0.5),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 54, 56, 55, 57, 59, 58, 60, 62, 61, 63, 65, 64, 66, 68, 67, 69, 71, 70, 72, 74, 73, 75, 77, 76, 78, 80, 79, 81, 83, 82, 84, 86, 85, 87, 89, 88, 90, 92, 91, 93, 95, 94, 96, 98, 97, 99, 101, 100, 102, 104, 103, 105, 107, 106)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Torch" type="MeshInstance" parent="."]

mesh = SubResource(3)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)
